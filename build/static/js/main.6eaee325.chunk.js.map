{"version":3,"sources":["services/persons.js","Phonebook.js","App.js","index.js"],"names":["url","parseReqData","req","then","res","data","axios","get","obj","post","id","put","delete","Person","name","nbr","persons","setPersons","setNotification","onClick","window","confirm","db","filter","p","setTimeout","Numbers","f","toLowerCase","includes","map","key","number","AddNew","newName","setNewName","newNbr","setNewNbr","setError","handleSubmit","event","preventDefault","existing","find","e","undefined","catch","response","msg","concat","onSubmit","value","onChange","target","type","Filter","newFilter","setNewFilter","Notification","notification","className","App","useState","error","useEffect","console","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6eaee325.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst url = '/api/persons'\r\n\r\nconst parseReqData = (req) => req.then(res => res.data)\r\n\r\nconst getAll = () => parseReqData(axios.get(url))\r\nconst create = obj => parseReqData(axios.post(url, obj))\r\nconst update = (id, obj) => parseReqData(axios.put(`${url}/${id}`, obj))\r\nconst remove = (id) => parseReqData(axios.delete(`${url}/${id}`))\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\nimport db from './services/persons'\r\n\r\nexport const Person = ({id, name, nbr, persons, setPersons, setNotification}) => {\r\n  const delPerson = () => {\r\n    if (window.confirm(`Delete ${name}?`))\r\n    db.remove(id).then(data => {\r\n      setPersons(persons.filter(p => p.id !== id))\r\n      setNotification(`Deleted ${name}`)\r\n      setTimeout(() => setNotification(''), 5000)\r\n    })\r\n  }\r\n  return (\r\n    <li>{name} {nbr} <button onClick={() => delPerson()}>delete</button></li>\r\n  )\r\n}\r\n\r\nexport const Numbers = ({persons, filter, setPersons, setNotification}) => {\r\n  return (\r\n    <ul>\r\n      {persons.filter( f => f.name.toLowerCase().includes(filter.toLowerCase())).map( f => <Person key={f.id} id={f.id} name={f.name} nbr={f.number} setPersons={setPersons} persons={persons} setNotification={setNotification}/>)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport const AddNew = ({persons, setPersons, newName, setNewName, newNbr, setNewNbr, setNotification, setError}) => {\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const existing = persons.find(e => e.name === newName)\r\n    if (existing !== undefined) {\r\n    // Name already exists, update?\r\n    if (window.confirm(newName + ' is already added to phonebook, replace the old number with a new one?')) {\r\n      db.update(existing.id, {...existing, number: newNbr})\r\n      .then(data => {\r\n        setPersons(persons.map(p => p.id !== existing.id ? p : data))\r\n        setNotification(`Updated ${newName} number to ${newNbr}`)\r\n        setTimeout(() => setNotification(''), 5000)\r\n      })\r\n      .catch( e => {\r\n        if (e.response.data.msg !== undefined) {\r\n          setError(`${e.response.data.msg}`)\r\n          setTimeout(() => setError(''), 5000)\r\n        } else {\r\n          setError(`Information of ${newName} has already been removed from server`)\r\n          setTimeout(() => setError(''), 5000)\r\n          setPersons(persons.filter(p => p.id !== existing.id))\r\n        }\r\n      })\r\n    }\r\n    } else {\r\n    db.create({name: newName, number: newNbr})\r\n      .then((data) => {\r\n      setPersons(persons.concat(data))\r\n      setNotification(`Added ${newName}`)\r\n      setTimeout(() => setNotification(''), 5000)\r\n      })\r\n      .catch(e => {\r\n        setError(`${e.response.data.msg}`)\r\n        setTimeout(() => setError(''), 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={event => handleSubmit(event)}>\r\n    <div>\r\n      name: <input\r\n      value={newName}\r\n      onChange={event => setNewName(event.target.value)} />\r\n    </div>\r\n    <div>\r\n      number: <input\r\n      value={newNbr}\r\n      onChange={event => setNewNbr(event.target.value)} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport const Filter = ({newFilter, setNewFilter}) => {\r\n  return (\r\n    <div>\r\n    filter shown with: <input\r\n    value={newFilter}\r\n    onChange={event => setNewFilter(event.target.value)} />\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\nimport db from './services/persons'\nimport { AddNew, Filter, Numbers } from './Phonebook'\n\nconst Notification = ({ notification, type }) => {\n  return (\n    <div className={`notif ${type}`}>\n      {notification}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNbr, setNewNbr ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notification, setNotification ] = useState('')\n  const [ error, setError ] = useState('')\n  \n  useEffect(() => {\n    db.getAll().then(res => setPersons(res))\n               .catch(console.error)\n  }, [])\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      {(notification !== '') ? <Notification notification={notification} type='success'/> : <div></div>}\n      {(error !== '') ? <Notification notification={error} type='error'/> : <div></div>}\n      <Filter newFilter={newFilter}\n        setNewFilter={setNewFilter}/>\n      <h2>add a new</h2>\n      <AddNew persons={persons} setPersons={setPersons} newName={newName}\n        setNewName={setNewName} newNbr={newNbr} setNewNbr={setNewNbr}\n        setNotification={setNotification} setError={setError}/>\n      <h2>Numbers</h2>\n      <Numbers persons={persons} filter={newFilter} setPersons={setPersons} setNotification={setNotification}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}